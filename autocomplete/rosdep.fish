set command "check install db init keys resolve update what-needs where-defined fix-permissions"
complete -c "rosdep" -f
complete -c"rosdep" -a "check" -n "not __fish_seen_subcommand_from $command" -d "check if the dependencies of package(s) have been met."
complete -c"rosdep" -a "install" -n "not __fish_seen_subcommand_from $command" -d "download and install the dependencies of a given package or packages."
complete -c"rosdep" -a "db" -n "not __fish_seen_subcommand_from $command" -d "generate the dependency database and print it to the console."
complete -c"rosdep" -a "init" -n "not __fish_seen_subcommand_from $command" -d "initialize rosdep sources in /etc/ros/rosdep."
complete -c"rosdep" -a "keys" -n "not __fish_seen_subcommand_from $command" -d "list the rosdep keys that the packages depend on."
complete -c"rosdep" -a "resolve" -n "not __fish_seen_subcommand_from $command" -d "resolve <rosdeps> to system dependencies"
complete -c"rosdep" -a "update" -n "not __fish_seen_subcommand_from $command" -d "update the local rosdep database based on the rosdep sources."
complete -c"rosdep" -a "what-needs" -n "not __fish_seen_subcommand_from $command" -d "print a list of packages that declare a rosdep on (at least one of) <rosdeps>"
complete -c"rosdep" -a "where-defined" -n "not __fish_seen_subcommand_from $command" -d "print a list of yaml files that declare a rosdep on (at least one of) <rosdeps>"
complete -c"rosdep" -a "fix-permissions" -n "not __fish_seen_subcommand_from $command" -d "Recursively change the permissions of the user's ros home directory. May require sudo."
complete -c "rosdep" -s "h" -l "help" -n "not __fish_seen_subcommand_from -h --help" -d "show this help message and exit"
complete -c "rosdep" -l "os" -n "not __fish_seen_subcommand_from --os" -d "Override OS name and version (colon-separated), e.g. ubuntu:lucid"
complete -c "rosdep" -s "c" -l "sources-cache-dir" -n "not __fish_seen_subcommand_from -c --sources-cache-dir" -F -d "Override /home/dh/.ros/rosdep/sources.cache"
complete -c "rosdep" -s "v" -l "verbose" -n "not __fish_seen_subcommand_from -v --verbose" -d "verbose display"
complete -c "rosdep" -l "version" -n "not __fish_seen_subcommand_from --version" -d "print just the rosdep version, then exit"
complete -c "rosdep" -l "all-version" -n "not __fish_seen_subcommand_from --all-version" -d "print rosdep version and version of installers, then exit"
complete -c "rosdep" -l "reinstall" -n "not __fish_seen_subcommand_from --reinstall" -d "(re)install all dependencies, even if already installed"
complete -c "rosdep" -s "y" -l "default-yes" -n "not __fish_seen_subcommand_from -y --default-yes" -d "Tell the package manager to default to y or fail when installing"
complete -c "rosdep" -s "s" -l "simulate" -n "not __fish_seen_subcommand_from -s --simulate" -d "Simulate install"
complete -c "rosdep" -s "r" -n "not __fish_seen_subcommand_from -r" -d "Continue installing despite errors."
complete -c "rosdep" -s "q" -n "not __fish_seen_subcommand_from -q" -d "Quiet. Suppress output except for errors."
complete -c "rosdep" -s "a" -l "all" -n "not __fish_seen_subcommand_from -a --all" -d "select all packages"
complete -c "rosdep" -s "n" -n "not __fish_seen_subcommand_from -n" -d "Do not consider implicit/recursive dependencies.  Only valid with 'keys', 'check', and 'install' commands."
complete -c "rosdep" -s "i" -l "ignore-packages-from-source" -l "ignore-src" -n "not __fish_seen_subcommand_from -i --ignore-packages-from-source -ignore-src" -d "Affects the 'check', 'install', and 'keys' verbs. If specified then rosdep will ignore keys that are found to be catkin or ament packages anywhere in the ROS_PACKAGE_PATH, AMENT_PREFIX_PATH or in any of the directories given by the --from-paths option."
complete -c "rosdep" -l "skip-keys" -n "not __fish_seen_subcommand_from --skip-keys" -d "Affects the 'check' and 'install' verbs. The specified rosdep keys will be ignored, i.e. not resolved and not installed. The option can be supplied multiple times. A space separated list of rosdep keys can also be passed as a string. A more permanent solution to locally ignore a rosdep key is creating a local rosdep rule with an empty list of packages (include it in /etc/ros/rosdep/sources.list.d/ before the defaults)."
complete -c "rosdep" -l "filter-for-installers" -n "not __fish_seen_subcommand_from --filter-for-installers" -d "Affects the 'db' verb. If supplied, the output of the 'db' command is filtered to only list packages whose installer is in the provided list. The option can be supplied multiple times. A space separated list of installers can also be passed as a string. Example: `--filter-for-installers \"apt pip\"`"
complete -c "rosdep" -l "from-paths" -n "not __fish_seen_subcommand_from --from-paths" -d "Affects the 'check', 'keys', and 'install' verbs. If specified the arguments to those verbs will be considered paths to be searched, acting on all catkin packages found there in."
complete -c "rosdep" -l "rosdistro" -n "not __fish_seen_subcommand_from --rosdistro" -d "Explicitly sets the ROS distro to use, overriding the normal method of detecting the ROS distro using the ROS_DISTRO environment variable. When used with the 'update' verb, only the specified distro will be updated."
complete -c "rosdep" -l "as-root" -n "not __fish_seen_subcommand_from --as-root" -d "Override whether sudo is used for a specific installer, e.g. '--as-root pip:false' or '--as-root \"pip:no homebrew:yes\"'. Can be specified multiple times."
complete -c "rosdep" -l "include-eol-distros" -n "not __fish_seen_subcommand_from --include-oel-distors" -d "Affects the 'update' verb. If specified end-of-life distros are being fetched too."
complete -c "rosdep" -s "t" -l "dependency-types" -n "not __fish_seen_subcommand_from -t --dependency-types" -d "Dependency types to install, can be given multiple times. Choose from {'exec', 'buildtool_export', 'build', 'buildtool', 'build_export', 'test', 'doc'}. Default: all except doc."